---
# Elasticsearch Ansible Tasks

- name: "Elasticsearch OS dependant packages"
  include_tasks: "{{ ansible_os_family }}.yml"  # Need to use include_tasks instead of import_tasks because it is using {{ ansible_os_family }} so it needs to be loaded dinamically

# Define auxiliar variable for ES version >= 6.0.0
- name: Define ESversionGt5 variable when ES version >= 6.0.0
  set_fact:
    ESversionGt5: true
  when: elasticsearch_version is version_compare('6.0', '>=')

# Configure directories
- name: Configuring directories
  file: path={{ elasticsearch_log_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_log_dir is defined
- file: path={{ elasticsearch_data_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_data_dir is defined
- file: path={{ elasticsearch_work_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_work_dir is defined
- file: path={{ elasticsearch_conf_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_conf_dir is defined
- file: path={{ elasticsearch_plugin_dir }} state=absent
  when: elasticsearch_plugin_dir is defined
- file: path={{ elasticsearch_plugin_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_plugin_dir is defined

# Configure open file limits
- name: Configuring open file limits
  shell: "echo Configuring open file limits"
- lineinfile: dest=/etc/security/limits.conf regexp='^{{ elasticsearch_user }}     -    nofile    {{ elasticsearch_max_open_files }}' insertafter=EOF line='{{ elasticsearch_user }}     -    nofile    {{ elasticsearch_max_open_files }}'
  when: elasticsearch_max_open_files is defined
  notify: Restart Elasticsearch
- lineinfile: dest=/etc/security/limits.conf regexp='^{{ elasticsearch_user }}     -    memlock   {{ elasticsearch_max_locked_memory }}' insertafter=EOF line='{{ elasticsearch_user }}     -    memlock   {{ elasticsearch_max_locked_memory }}'
  when: elasticsearch_max_locked_memory is defined
  notify: Restart Elasticsearch
- lineinfile: dest=/etc/pam.d/su regexp='^session    required   pam_limits.so' insertafter=EOF line='session    required   pam_limits.so'
  notify: Restart Elasticsearch
- lineinfile: dest=/etc/pam.d/common-session regexp='^session    required   pam_limits.so' insertafter=EOF line='session    required   pam_limits.so'
  when: ansible_os_family == "Debian"
  notify: Restart Elasticsearch
- lineinfile: dest=/etc/pam.d/common-session-noninteractive regexp='^session    required   pam_limits.so' insertafter=EOF line='session    required   pam_limits.so'
  when: ansible_os_family == "Debian"
  notify: Restart Elasticsearch
- lineinfile: dest=/etc/pam.d/sudo regexp='^session    required   pam_limits.so' insertafter=EOF line='session    required   pam_limits.so'
  notify: Restart Elasticsearch
- lineinfile: dest=/etc/init.d/elasticsearch regexp='^(DAEMON_OPTS=".*-Des.max-open-files=true")$' insertafter='^(DAEMON_OPTS=".*CONF_DIR")$' line='DAEMON_OPTS="$DAEMON_OPTS -Des.max-open-files=true"'
  notify: Restart Elasticsearch

# Install AWS Plugin
- include_tasks: aws.yml
  when: (elasticsearch_plugin_aws_version is defined)

# Install Other Generic Plugins
- include_tasks: plugins.yml
  when: (elasticsearch_plugins is defined)

# Install custom JARs
- include_tasks: custom-jars.yml
  when: (elasticsearch_custom_jars is defined)

# Install Marvel Plugin
- include_tasks: marvel.yml
  when: (elasticsearch_plugin_marvel_version is defined)

# Configure Elasticsearch Node (ES version < 5.0)
- block:
  - name: Configuring Elasticsearch Node (ES version < 5.0)
    template:
      src: "{{ item }}"
      dest: "{{ elasticsearch_conf_dir }}/elasticsearch.yml"
      owner: "{{ elasticsearch_user }}"
      group: "{{ elasticsearch_group }}"
      mode: 0644
    with_first_found:
      - "templates/{{ inventory_hostname }}/elasticsearch/elasticsearch.yml.j2"
      - "templates/elasticsearch/elasticsearch.yml.j2"
      - "elasticsearch.yml.j2"
    when: elasticsearch_conf_dir is defined
    notify: Restart Elasticsearch
  - template:
      src: "{{ item }}"
      dest: /etc/default/elasticsearch
      owner: "{{ elasticsearch_user }}"
      group: "{{ elasticsearch_group }}"
      mode: 0644
    with_first_found:
      - "templates/{{ inventory_hostname }}/elasticsearch/elasticsearch.default.j2"
      - "templates/elasticsearch/elasticsearch.default.j2"
      - "elasticsearch.default.j2"
    when: ansible_os_family == "Debian"
    notify: Restart Elasticsearch
  - template:
      src: "{{ item }}"
      dest: /etc/sysconfig/elasticsearch
      owner: "{{ elasticsearch_user }}"
      group: "{{ elasticsearch_group }}"
      mode: 0644
    with_first_found:
      - "templates/{{ inventory_hostname }}/elasticsearch/elasticsearch.default.j2"
      - "templates/elasticsearch/elasticsearch.default.j2"
      - "elasticsearch.default.j2"
    when: ansible_os_family in ['RedHat', 'Rocky']
    notify: Restart Elasticsearch
  when: elasticsearch_version is version_compare('5.0', '<')

# Configure Elasticsearch Node (ES version > 5.0)
- block:
  - name: Configuring Elasticsearch Node (ES version > 5.0
    template:
      src: "{{ item }}"
      dest: "{{ elasticsearch_conf_dir }}/elasticsearch.yml"
      owner: "{{ elasticsearch_user }}"
      group: "{{ elasticsearch_group }}"
      mode: 0644
    with_first_found:
      - "templates/{{ inventory_hostname }}/elasticsearch/elasticsearch5.yml.j2"
      - "templates/{{ inventory_hostname }}/elasticsearch/elasticsearch.yml.j2"
      - "templates/elasticsearch/elasticsearch5.yml.j2"
      - "templates/elasticsearch/elasticsearch.yml.j2"
      - "elasticsearch5.yml.j2"
    when: elasticsearch_conf_dir is defined
    notify: Restart Elasticsearch
  - template:
      src: "{{ item }}"
      dest: /etc/default/elasticsearch
      owner: "{{ elasticsearch_user }}"
      group: "{{ elasticsearch_group }}"
      mode: 0644
    with_first_found:
      - "templates/{{ inventory_hostname }}/elasticsearch/elasticsearch5.default.j2"
      - "templates/{{ inventory_hostname }}/elasticsearch/elasticsearch.default.j2"
      - "templates/elasticsearch/elasticsearch5.default.j2"
      - "templates/elasticsearch/elasticsearch.default.j2"
      - "elasticsearch5.default.j2"
    when: ansible_os_family == "Debian"
    notify: Restart Elasticsearch
  - template:
      src: "{{ item }}"
      dest: /etc/sysconfig/elasticsearch
      owner: "{{ elasticsearch_user }}"
      group: "{{ elasticsearch_group }}"
      mode: 0644
    with_first_found:
      - "templates/{{ inventory_hostname }}/elasticsearch/elasticsearch5.default.j2"
      - "templates/{{ inventory_hostname }}/elasticsearch/elasticsearch.default.j2"
      - "templates/elasticsearch/elasticsearch5.default.j2"
      - "templates/elasticsearch/elasticsearch.default.j2"
      - "elasticsearch5.default.j2"
    when: ansible_os_family in ['RedHat', 'Rocky']
    notify: Restart Elasticsearch
  when: elasticsearch_version is version_compare('5.0', '>=')

# Patch ES version 5 for cve-2021-44228-vulnerability
- import_tasks: cve-2021-44228-patch.yml
  when:
    - elasticsearch_version is version_compare('2.0', '>')
    - elasticsearch_version is version_compare('6.0', '<')
  tags:
    - "cve-2021-44228-patch"

# Patch ES version 1.x for cve-2021-4104-vulnerability
- import_tasks: cve-2021-4104-patch.yml
  when:
    - elasticsearch_version is version_compare('2.0', '<')
  tags:
    - "cve-2021-4104-patch"

# Register Elasticsearch service to start on boot
- name: Ensure Elasticsearch is started on boot
  service: name=elasticsearch enabled={{ elasticsearch_service_startonboot }} state={{ elasticsearch_service_state }}

# Create systemd override directory
- name: Creating systemd override directory
  file:
    path: /etc/systemd/system/elasticsearch.service.d
    state: directory
  when: ansible_service_mgr == "systemd"

# Configure LimitMEMLock on systemd
- name: Configuring LimitMEMLock on systemd
  template: src=elasticsearch.systemd.override.j2 dest=/etc/systemd/system/elasticsearch.service.d/override.conf owner={{ elasticsearch_user }} group={{ elasticsearch_group }} mode=0644
  when: ansible_service_mgr == "systemd"
  notify:
    - Reload Systemd units
    - Restart Elasticsearch
