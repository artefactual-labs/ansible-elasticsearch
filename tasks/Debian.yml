---
# Elasticsearch debian install

# Get elasticsearch version when elasticsearch is already installed
- name: Get installed elasticsearch version
  shell: dpkg-query -f='${Version}' -W 'elasticsearch'
  register: installed_elasticsearch_version
  ignore_errors: yes

- name: Abort when elasticsearch installed version < 1.8 and version >=5 is going to be installed
  fail:
    msg: "Please uninstall elasticsearch {{ installed_elasticsearch_version.stdout }} before upgrading to {{ elasticsearch_version }} version"
  when:
    - installed_elasticsearch_version is succeeded
    - installed_elasticsearch_version.stdout is version_compare('1.8', '<')
    - elasticsearch_version is version_compare('5.0', '>=')

# Update repos
- name: Install python-software-properties
  apt:
    pkg: "python-software-properties"
    state: "present"
    update_cache: "yes"
    cache_valid_time: "{{apt_cache_valid_time}}"
  when:
    - ansible_distribution_release != "bionic"

- name: Update repositories
  apt_repository:
    repo: "{{ item }}"
    state: "present"
    update_cache: "yes"
  with_items: "{{ elasticsearch_apt_repos }}"

# Install Java
- name: Install dependencies
  apt:
    pkg: "{{elasticsearch_apt_java_package}}"
    state: "present"
  when: elasticsearch_install_java|bool

# Install dependencies
- name: Install dependencies
  apt:
    pkg: "{{ elasticsearch_apt_dependencies }}"
    state: "present"

# Configure user and group
- name: Configuring user and group
  group:
    name: "{{ elasticsearch_group }}"
- user:
    name: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    createhome: "no"

# Check whether we have aleady installed the same version
- shell: if [ -e /usr/share/elasticsearch/lib/elasticsearch-{{ elasticsearch_version }}.jar ]; then echo yes; else echo no; fi;
  register: version_exists
  check_mode: no

# Download deb if needed (ES version < 5.0.0)
- name: Download Elasticsearch deb (ES version < 5.0.0)
  get_url: url={{ elasticsearch17_download_url }}/elasticsearch-{{ elasticsearch_version }}.deb dest=/tmp/elasticsearch-{{ elasticsearch_version }}.deb mode=0440
  when: version_exists.stdout == 'no' and elasticsearch_version is version_compare('5.0', '<')

# Download deb if needed (ES version >= 5.0.0)
- name: Download Elasticsearch deb (ES version >= 5.0.0)
  get_url: url={{ elasticsearch_download_url }}/elasticsearch-{{ elasticsearch_version }}.deb dest=/tmp/elasticsearch-{{ elasticsearch_version }}.deb mode=0440
  when: version_exists.stdout == 'no' and elasticsearch_version is version_compare('5.0', '>=')

# Uninstall previous version if applicable
- name: Uninstalling previous version if applicable
  shell: dpkg --remove elasticsearch
  when: version_exists.stdout == 'no'
- file:
    path: "/usr/share/elasticsearch"
    state: "absent"
  when: version_exists.stdout == 'no'

# Install the deb
- name: Install Elasticsearch deb
  shell: dpkg -i -E --force-confnew /tmp/elasticsearch-{{ elasticsearch_version }}.deb
  when: version_exists.stdout == 'no'
- file: path=/usr/share/elasticsearch state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
